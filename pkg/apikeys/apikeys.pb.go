// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: apikeys.proto

package apikeys

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UsageReason int32

const (
	UsageReason_CUSTOMKEY    UsageReason = 0
	UsageReason_CUSTOMKEYLEN UsageReason = 1
	UsageReason_PERSISTKEY   UsageReason = 2
	UsageReason_LARGEBODY    UsageReason = 3
)

// Enum value maps for UsageReason.
var (
	UsageReason_name = map[int32]string{
		0: "CUSTOMKEY",
		1: "CUSTOMKEYLEN",
		2: "PERSISTKEY",
		3: "LARGEBODY",
	}
	UsageReason_value = map[string]int32{
		"CUSTOMKEY":    0,
		"CUSTOMKEYLEN": 1,
		"PERSISTKEY":   2,
		"LARGEBODY":    3,
	}
)

func (x UsageReason) Enum() *UsageReason {
	p := new(UsageReason)
	*p = x
	return p
}

func (x UsageReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UsageReason) Descriptor() protoreflect.EnumDescriptor {
	return file_apikeys_proto_enumTypes[0].Descriptor()
}

func (UsageReason) Type() protoreflect.EnumType {
	return &file_apikeys_proto_enumTypes[0]
}

func (x UsageReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UsageReason.Descriptor instead.
func (UsageReason) EnumDescriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{0}
}

type APIKeyUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApikeyId      string                 `protobuf:"bytes,1,opt,name=apikey_id,json=apikeyId,proto3" json:"apikey_id,omitempty"`
	FromIP        string                 `protobuf:"bytes,2,opt,name=fromIP,proto3" json:"fromIP,omitempty"`
	Reason        UsageReason            `protobuf:"varint,3,opt,name=reason,proto3,enum=UsageReason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIKeyUsage) Reset() {
	*x = APIKeyUsage{}
	mi := &file_apikeys_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyUsage) ProtoMessage() {}

func (x *APIKeyUsage) ProtoReflect() protoreflect.Message {
	mi := &file_apikeys_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyUsage.ProtoReflect.Descriptor instead.
func (*APIKeyUsage) Descriptor() ([]byte, []int) {
	return file_apikeys_proto_rawDescGZIP(), []int{0}
}

func (x *APIKeyUsage) GetApikeyId() string {
	if x != nil {
		return x.ApikeyId
	}
	return ""
}

func (x *APIKeyUsage) GetFromIP() string {
	if x != nil {
		return x.FromIP
	}
	return ""
}

func (x *APIKeyUsage) GetReason() UsageReason {
	if x != nil {
		return x.Reason
	}
	return UsageReason_CUSTOMKEY
}

var File_apikeys_proto protoreflect.FileDescriptor

const file_apikeys_proto_rawDesc = "" +
	"\n" +
	"\rapikeys.proto\"h\n" +
	"\vAPIKeyUsage\x12\x1b\n" +
	"\tapikey_id\x18\x01 \x01(\tR\bapikeyId\x12\x16\n" +
	"\x06fromIP\x18\x02 \x01(\tR\x06fromIP\x12$\n" +
	"\x06reason\x18\x03 \x01(\x0e2\f.UsageReasonR\x06reason*M\n" +
	"\vUsageReason\x12\r\n" +
	"\tCUSTOMKEY\x10\x00\x12\x10\n" +
	"\fCUSTOMKEYLEN\x10\x01\x12\x0e\n" +
	"\n" +
	"PERSISTKEY\x10\x02\x12\r\n" +
	"\tLARGEBODY\x10\x03B/Z-github.com/thek4n/paste.thek4n.ru/pkg/apikeysb\x06proto3"

var (
	file_apikeys_proto_rawDescOnce sync.Once
	file_apikeys_proto_rawDescData []byte
)

func file_apikeys_proto_rawDescGZIP() []byte {
	file_apikeys_proto_rawDescOnce.Do(func() {
		file_apikeys_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_apikeys_proto_rawDesc), len(file_apikeys_proto_rawDesc)))
	})
	return file_apikeys_proto_rawDescData
}

var file_apikeys_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_apikeys_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_apikeys_proto_goTypes = []any{
	(UsageReason)(0),    // 0: UsageReason
	(*APIKeyUsage)(nil), // 1: APIKeyUsage
}
var file_apikeys_proto_depIdxs = []int32{
	0, // 0: APIKeyUsage.reason:type_name -> UsageReason
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_apikeys_proto_init() }
func file_apikeys_proto_init() {
	if File_apikeys_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_apikeys_proto_rawDesc), len(file_apikeys_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apikeys_proto_goTypes,
		DependencyIndexes: file_apikeys_proto_depIdxs,
		EnumInfos:         file_apikeys_proto_enumTypes,
		MessageInfos:      file_apikeys_proto_msgTypes,
	}.Build()
	File_apikeys_proto = out.File
	file_apikeys_proto_goTypes = nil
	file_apikeys_proto_depIdxs = nil
}
