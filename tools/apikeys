#!/bin/sh

set -eu

APIKEYSDB="1"

redis() {
    redis-cli -h "${REDIS_HOST:?not set}" -p "${REDIS_PORT:-6379}" -n "${APIKEYSDB}" "${@}"
}

cmd_list_keys() {
    for key in $(redis --raw KEYS '*')
    do
        valid="$(redis --raw HGET "${key}" valid)"
        id="$(redis --raw HGET "${key}" id)"

        validmsg="invalid"
        if [ "${valid}" = "true" ]; then
            validmsg="valid"
        fi

        printf "%s - %s\n" "[${id}] ${key}" "${validmsg}"
    done
}

exists() {
    exists="$(redis --raw exists "${1}")"

    test "${exists}" -gt 0
}

cmd_reauthorize_key() {
    if exists "${1}"; then
        redis HSET "${1:?Key not set}" valid true
        return 0
    fi
    return 1
}

cmd_revoke_key() {
    if exists "${1}"; then
        redis HSET "${1:?Key not set}" valid false
        return 0
    fi
    return 1
}

cmd_remove_key() {
    redis DEL "${1:?Key not set}"
}

cmd_generate() {
    newkey="$(openssl rand -hex 32)"
    newkeyid="$(uuidgen)"
    redis HSET "${newkey}" valid true id "${newkeyid}"  1>/dev/null 2>/dev/null
    echo "${newkey}"
}


if [ -z "${1+x}" ]; then
    cmd_list_keys
    exit 0
fi


case "${1}" in
    list|ls) shift;        cmd_list_keys          ;;
    revoke) shift;         cmd_revoke_key    "$@" ;;
    reauthorize) shift;    cmd_reauthorize_key    "$@" ;;
    rm) shift;             cmd_remove_key    "$@" ;;
    gen) shift;            cmd_generate      "$@" ;;

    *)                     echo "Wrong command" >&2 ;;
esac
exit 0
